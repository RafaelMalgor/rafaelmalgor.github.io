{"version":3,"sources":["logo.svg","drawing.js","gestures.js","App.js","reportWebVitals.js","index.js"],"names":["fingers","t","i","m","r","p","drawHand","predictions","context","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJoinIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","x","y","arc","Math","PI","fillStyle","fill","thumbsDownGesture","fp","addCurl","Thumb","NoCurl","addDirection","VerticalDown","DiagonalDownLeft","DiagonalDownRight","Index","FullCurl","HorizontalLeft","HorizontalRight","Middle","Ring","Pinky","raisedHandGesture","VerticalUp","metalHandGesture","hornHandGesture","Gestures","VictoryGesture","ThumbsUpGesture","App","webcamRef","useRef","canvasRef","useState","currentGesture","setCurrentGesture","modelLoaded","setModelLoaded","executeHandpose","a","handpose","net","console","log","setInterval","detectHand","current","video","readyState","videoWidth","videoHeight","width","height","estimateHands","hand","GE","estimate","undefined","gesture","gestures","confidence","map","maxConfidenceIndex","indexOf","max","name","ctx","getContext","useEffect","className","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ede13a29.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Points for fingers\r\nconst fingers = {\r\n    t: [0, 1, 2, 3, 4],\r\n    i: [0, 5, 6, 7, 8],\r\n    m: [0, 9, 10, 11, 12],\r\n    r: [0, 13, 14, 15, 16],\r\n    p: [0, 17, 18, 19, 20],\r\n};\r\n\r\nexport const drawHand = (predictions, context) => {\r\n\r\n    if (predictions.length > 0) {\r\n\r\n        predictions.forEach((prediction) => {\r\n\r\n            const landmarks = prediction.landmarks;\r\n\r\n            for (let j = 0; j < Object.keys(fingers).length; j++) {\r\n                const finger = Object.keys(fingers)[j];\r\n                for (let k = 0; k < fingers[finger].length - 1; k++) {\r\n                    const firstJointIndex = fingers[finger][k];\r\n                    const secondJoinIndex = fingers[finger][k + 1];\r\n\r\n                    context.beginPath();\r\n                    context.moveTo(landmarks[firstJointIndex][0],\r\n                        landmarks[firstJointIndex][1]);\r\n\r\n                    context.lineTo(landmarks[secondJoinIndex][0],\r\n                        landmarks[secondJoinIndex][1]);\r\n\r\n                    context.strokeStyle = \"white\";\r\n                    context.lineWidth = 2;\r\n                    context.stroke();\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < landmarks.length; i++) {\r\n                const x = landmarks[i][0];\r\n                const y = landmarks[i][1];\r\n                context.beginPath();\r\n                context.arc(x, y, 5, 0, 3 * Math.PI);\r\n                context.fillStyle = \"green\";\r\n                context.fill();\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport const drawBox = (predictions, context) => {\r\n\r\n    if (predictions.length > 0) {\r\n\r\n        predictions.forEach((prediction) => {\r\n\r\n            context.beginPath();\r\n            context.rect(prediction.boundingBox.topLeft[0], prediction.boundingBox.topLeft[1], prediction.boundingBox.bottomRight[0] - prediction.boundingBox.topLeft[0],\r\n                prediction.boundingBox.bottomRight[1] - prediction.boundingBox.topLeft[1]);\r\n            context.strokeStyle = \"blue\";\r\n            context.lineWidth = 2;\r\n            context.stroke();\r\n        });\r\n    }\r\n};\r\n\r\n","import * as fp from 'fingerpose';\r\n\r\nconst thumbsDownGesture = new fp.GestureDescription('thumbs_down');\r\nthumbsDownGesture.addCurl(fp.Finger.Thumb, fp.FingerCurl.NoCurl, 1.0);\r\nthumbsDownGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.VerticalDown, 1.0);\r\nthumbsDownGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.DiagonalDownLeft, 0.5);\r\nthumbsDownGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.DiagonalDownRight, 0.5);\r\nthumbsDownGesture.addCurl(fp.Finger.Index, fp.FingerCurl.FullCurl, 1.0);\r\nthumbsDownGesture.addDirection(fp.Finger.Index, fp.FingerDirection.HorizontalLeft, 1.0);\r\nthumbsDownGesture.addDirection(fp.Finger.Index, fp.FingerDirection.HorizontalRight, 1.0);\r\nthumbsDownGesture.addCurl(fp.Finger.Middle, fp.FingerCurl.FullCurl, 1.0);\r\nthumbsDownGesture.addDirection(fp.Finger.Middle, fp.FingerDirection.HorizontalLeft, 1.0);\r\nthumbsDownGesture.addDirection(fp.Finger.Middle, fp.FingerDirection.HorizontalRight, 1.0);\r\nthumbsDownGesture.addCurl(fp.Finger.Ring, fp.FingerCurl.FullCurl, 1.0);\r\nthumbsDownGesture.addDirection(fp.Finger.Ring, fp.FingerDirection.HorizontalLeft, 1.0);\r\nthumbsDownGesture.addDirection(fp.Finger.Ring, fp.FingerDirection.HorizontalRight, 1.0);\r\nthumbsDownGesture.addCurl(fp.Finger.Pinky, fp.FingerCurl.FullCurl, 1.0);\r\nthumbsDownGesture.addDirection(fp.Finger.Pinky, fp.FingerDirection.HorizontalLeft, 1.0);\r\nthumbsDownGesture.addDirection(fp.Finger.Pinky, fp.FingerDirection.HorizontalRight, 1.0);\r\n\r\n\r\nconst raisedHandGesture = new fp.GestureDescription('raised_hand');\r\nraisedHandGesture.addCurl(fp.Finger.Thumb, fp.FingerCurl.NoCurl, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.VerticalUp, 1.0);\r\nraisedHandGesture.addCurl(fp.Finger.Index, fp.FingerCurl.NoCurl, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Index, fp.FingerDirection.VerticalUp, 1.0);\r\nraisedHandGesture.addCurl(fp.Finger.Middle, fp.FingerCurl.NoCurl, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Middle, fp.FingerDirection.VerticalUp, 1.0);\r\nraisedHandGesture.addCurl(fp.Finger.Ring, fp.FingerCurl.NoCurl, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Ring, fp.FingerDirection.VerticalUp, 1.0);\r\nraisedHandGesture.addCurl(fp.Finger.Pinky, fp.FingerCurl.NoCurl, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Pinky, fp.FingerDirection.VerticalUp, 1.0);\r\n\r\nconst metalHandGesture = new fp.GestureDescription('metal_hand');\r\nmetalHandGesture.addCurl(fp.Finger.Thumb, fp.FingerCurl.NoCurl, 1.0);\r\nmetalHandGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.HorizontalLeft, 1.0);\r\nmetalHandGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.HorizontalRight, 1.0);\r\nmetalHandGesture.addCurl(fp.Finger.Index, fp.FingerCurl.NoCurl, 1.0);\r\nmetalHandGesture.addDirection(fp.Finger.Index, fp.FingerDirection.VerticalUp, 1.0);\r\nmetalHandGesture.addCurl(fp.Finger.Middle, fp.FingerCurl.FullCurl, 1.0);\r\nmetalHandGesture.addDirection(fp.Finger.Middle, fp.FingerDirection.VerticalUp, 1.0);\r\nmetalHandGesture.addCurl(fp.Finger.Ring, fp.FingerCurl.FullCurl, 1.0);\r\nmetalHandGesture.addDirection(fp.Finger.Ring, fp.FingerDirection.VerticalUp, 1.0);\r\nmetalHandGesture.addCurl(fp.Finger.Pinky, fp.FingerCurl.NoCurl, 1.0);\r\nmetalHandGesture.addDirection(fp.Finger.Pinky, fp.FingerDirection.VerticalUp, 1.0);\r\n\r\nconst hornHandGesture = new fp.GestureDescription('horn_hand');\r\nhornHandGesture.addCurl(fp.Finger.Thumb, fp.FingerCurl.FullCurl, 5.0);\r\nhornHandGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.HorizontalLeft, 1.0);\r\nhornHandGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.HorizontalRight, 1.0);\r\nhornHandGesture.addCurl(fp.Finger.Index, fp.FingerCurl.NoCurl, 1.0);\r\nhornHandGesture.addDirection(fp.Finger.Index, fp.FingerDirection.VerticalUp, 1.0);\r\nhornHandGesture.addCurl(fp.Finger.Middle, fp.FingerCurl.FullCurl, 1.0);\r\nhornHandGesture.addCurl(fp.Finger.Ring, fp.FingerCurl.FullCurl, 1.0);\r\nhornHandGesture.addCurl(fp.Finger.Pinky, fp.FingerCurl.NoCurl, 1.0);\r\nhornHandGesture.addDirection(fp.Finger.Pinky, fp.FingerDirection.VerticalUp, 1.0);\r\n\r\nexport const Gestures = [\r\n    fp.Gestures.VictoryGesture,\r\n    fp.Gestures.ThumbsUpGesture,\r\n    thumbsDownGesture,\r\n    raisedHandGesture,\r\n    metalHandGesture,\r\n    hornHandGesture];","import logo from './logo.svg';\nimport './App.css';\nimport React, { useRef, useState, useEffect } from 'react';\nimport * as tf from '@tensorflow/tfjs';\nimport * as handpose from '@tensorflow-models/handpose';\nimport Webcam from 'react-webcam';\nimport { drawHand } from './drawing';\nimport * as fp from 'fingerpose';\nimport { Gestures } from './gestures';\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [currentGesture, setCurrentGesture] = useState(\"unknown\");\n  const [modelLoaded, setModelLoaded] = useState(false);\n\n  const gesturesEmojis = {\n    \"thumbs_up\": \"👍\",\n    \"victory\": \"✌\",\n    \"thumbs_down\": \"👎\",\n    \"raised_hand\": \"✋\",\n    \"metal_hand\": \"🤟\",\n    \"horn_hand\": \"🤘\",\n    \"unknown\": \"❓\",\n  };\n\n  const executeHandpose = async () => {\n    const net = await handpose.load();\n    console.log('Handpose model correctly loaded');\n    setModelLoaded(true);\n\n    setInterval(() => {\n      detectHand(net)\n    }, 200);\n  };\n\n  const detectHand = async (net) => {\n    if (typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current != null &&\n      webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const videoWidth = video.videoWidth;\n      const videoHeight = video.videoHeight;\n\n      // Size element based on actual video size\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Size canvas accordingly so overlay drawings match\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Run model to get estimation\n      const hand = await net.estimateHands(video);\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator(\n          Gestures\n        );\n\n        const gesture = await GE.estimate(hand[0].landmarks, 8);\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n          const confidence = gesture.gestures.map((prediction) => prediction.confidence);\n          const maxConfidenceIndex = confidence.indexOf(Math.max(...confidence));\n\n          setCurrentGesture(gesture.gestures[maxConfidenceIndex].name);\n\n        }\n      } else {\n        setCurrentGesture(\"unknown\");\n      }\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n  \n  useEffect(() => {\n    executeHandpose();\n  }, []);\n\n\n  return (\n    <div className=\"App\" >\n      <h1>Detect Hand Emoji</h1>\n      {!modelLoaded &&\n        <h2>Loading model...</h2>\n      }\n      <p>Instruction: try some hand gestures, like 👍 ✌ ✋ 🤟 👎</p>\n      <div className=\"emoji\">{gesturesEmojis[currentGesture]}</div>\n      <header className=\"App-headesr\">\n        <Webcam ref={webcamRef} className=\"camera\" />\n        <canvas ref={canvasRef} className=\"camera\" />\n      </header>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}